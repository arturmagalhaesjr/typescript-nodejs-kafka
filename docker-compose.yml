version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    environment:
      ZOOKEEPER_CLIENT_PORT: ZOOKEEPER_PORT
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    extra_hosts:
      - "moby:127.0.0.1"
    kafka:
      image: wurstmeister/kafka:2.13-2.7.0
      depends_on:
        - zookeeper
      environment:
        KAFKA_ADVERTISED_PORT: ${KAFKA_PORT}
        KAFKA_ADVERTISED_HOST_NAME: "kafka"
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
        KAFKA_BROKER_ID: "1"
        KAFKA_PORT: ${KAFKA_PORT}
        KAFKA_offsets_topic_replication_factor: 3
      ports:
        - ${KAFKA_PORT}:${KAFKA_PORT}
  backend:
    build:
      context: .
      args:
        - token_auth=${TOKEN_AUTHENTICATION}
        - session_secret=${SESSION_SECRET}
        - node_port=${NODE_PORT}
    # image: <image>
    restart: always
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: ${KAFKA_PORT}
    depends_on:
      - kafka
    ports:
      - 5002:${NODE_PORT}
    healthcheck:
      test: node /usr/src/app/health-check.js
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 120s
    deploy:
      mode: replicated
      replicas: 5
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
      restart_policy:
        condition: on-failure
        delay: 10s
